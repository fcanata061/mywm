MyWM (mwm) - Tutorial Completo
==============================

üìå Sobre
--------
MyWM (apelidado de **mwm**) √© um *tiling window manager* escrito em Python,
leve, extens√≠vel e configur√°vel. Ele utiliza **X11 (xcffib/cairocffi)** para gerenciar
janelas e oferece suporte a m√∫ltiplos monitores, scratchpads, layouts din√¢micos,
decora√ß√µes customizadas e integra√ß√£o com notifica√ß√µes.

---------------------------
üìÇ Estrutura de Diret√≥rios
---------------------------
Reposit√≥rio principal:
mywm/
‚îú‚îÄ‚îÄ mywm1.0/                 ‚Üê C√≥digo fonte principal do WM
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îú‚îÄ‚îÄ main.py              ‚Üê Ponto de entrada principal
‚îÇ   ‚îú‚îÄ‚îÄ core/                ‚Üê N√∫cleo: layouts, EWMH, utilit√°rios, config_loader
‚îÇ   ‚îú‚îÄ‚îÄ managers/            ‚Üê Gerenciadores: janelas, workspaces, keybindings, etc.
‚îÇ   ‚îî‚îÄ‚îÄ config/              ‚Üê Arquivos de configura√ß√£o (config.py)
‚îú‚îÄ‚îÄ bin/
‚îÇ   ‚îî‚îÄ‚îÄ mwm                  ‚Üê Bin√°rio launcher (opcional, em dev mode)
‚îú‚îÄ‚îÄ pyproject.toml           ‚Üê Configura√ß√£o pip/poetry (entrypoint, depend√™ncias)
‚îú‚îÄ‚îÄ setup.cfg                ‚Üê Configura√ß√£o setuptools
‚îî‚îÄ‚îÄ README.md

---------------------------------
‚öôÔ∏è Depend√™ncias
---------------------------------
- Python >= 3.8
- xcffib >= 0.12.1
- cairocffi >= 1.6.1
- pygobject >= 3.42.0
- notify-send (para notifica√ß√µes, opcional)
- Xephyr (para testes em janela, opcional)

Instale depend√™ncias no Debian/Ubuntu:
$ sudo apt install python3 python3-pip python3-gi python3-cffi \
                   libxcursor-dev libxrandr-dev libxinerama-dev \
                   libxi-dev libpangocairo-1.0-0 \
                   libgirepository1.0-dev gir1.2-gtk-3.0 \
                   xserver-xephyr notify-osd

---------------------------------
üöÄ Instala√ß√£o
---------------------------------
1. Clonar o reposit√≥rio:
   $ git clone https://github.com/seuuser/mywm.git
   $ cd mywm

2. Instalar via pip (usu√°rio):
   $ pip install --user .

3. Instalar em modo desenvolvimento (para hackear o c√≥digo):
   $ pip install --user -e .

Ap√≥s a instala√ß√£o, o bin√°rio **mwm** ficar√° dispon√≠vel no seu PATH (geralmente em ~/.local/bin).

---------------------------------
‚ñ∂Ô∏è Uso
---------------------------------
Executar diretamente:
$ mwm

Testar dentro de Xephyr:
$ mwm --xephyr :1

Passar config customizado:
$ mwm --config ~/.config/mywm/config.py

Ativar debug:
$ mwm --debug

Ver vers√£o:
$ mwm --version

---------------------------------
üõ†Ô∏è Configura√ß√£o
---------------------------------
O arquivo principal de configura√ß√£o fica em:
~/.config/mywm/config.py

Exemplo m√≠nimo:
config = {
    "terminal": "alacritty",
    "workspaces": {
        "names": ["1", "2", "web", "code"],
        "default_layout": "tile"
    },
    "keybindings": [
        {"keysym": "Return", "modifiers": ["Mod4"], "action": "spawn_terminal"},
        {"keysym": "q", "modifiers": ["Mod4"], "action": "close_window"},
    ],
}

---------------------------------
üìã Funcionalidades Suportadas
---------------------------------
‚úîÔ∏è Layouts din√¢micos: tile, monocle, bsp (bin√°rio tree split)  
‚úîÔ∏è Workspaces virtuais configur√°veis  
‚úîÔ∏è Scratchpads (janelas ocultas que podem ser mostradas/ocultadas por hotkeys)  
‚úîÔ∏è Multi-monitor (Xinerama/Randr) com suporte a workspaces independentes  
‚úîÔ∏è Decora√ß√µes: bordas configur√°veis, gaps internos e externos  
‚úîÔ∏è Keybindings personaliz√°veis (atalhos configurados no config.py)  
‚úîÔ∏è Integra√ß√£o com notifica√ß√µes (notify-send ou lemonbar)  
‚úîÔ∏è Persist√™ncia: salvar estado de workspaces e scratchpads em JSON  
‚úîÔ∏è Execu√ß√£o em Xephyr (teste do WM dentro de outro X server)  
‚úîÔ∏è Compatibilidade EWMH/ICCCM b√°sica (necess√°rio para apps modernos)  

---------------------------------
‚å®Ô∏è Comandos/Keybindings (exemplos)
---------------------------------
- Mod4 + Return ‚Üí abre terminal
- Mod4 + q ‚Üí fecha janela ativa
- Mod4 + Space ‚Üí troca layout atual
- Mod4 + Tab ‚Üí foca pr√≥xima janela
- Mod4 + Shift + s ‚Üí alterna scratchpad "term"
- Mod4 + Left ‚Üí workspace anterior
- Mod4 + Right ‚Üí pr√≥ximo workspace

(Os atalhos podem ser editados em ~/.config/mywm/config.py)

---------------------------------
üß™ Desenvolvimento / Debug
---------------------------------
Rodar direto sem instalar:
$ python3 mywm1.0/main.py

Rodar bin√°rio local (sem pip):
$ ./bin/mwm --debug

Rodar no Xephyr para n√£o derrubar sua sess√£o atual:
$ Xephyr :1 -screen 1280x800 -ac -br -noreset &
$ DISPLAY=:1 mwm

---------------------------------
üñ•Ô∏è Execu√ß√£o no .xinitrc
---------------------------------
Para usar como seu WM principal, adicione ao ~/.xinitrc:

exec mwm

E inicie com:
$ startx

---------------------------------
üîÆ Roadmap / Extens√µes Futuras
---------------------------------
- Suporte Wayland (longo prazo)
- Melhor suporte EWMH (NET_WM_STATE_FULLSCREEN, etc.)
- Mais layouts (grid, spiral)
- Statusbar integrada
- Melhor integra√ß√£o com systemd user services

---------------------------------
üìú Licen√ßa
---------------------------------
MIT License - livre para uso, modifica√ß√£o e distribui√ß√£o.
